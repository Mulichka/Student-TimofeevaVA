#1.	Написать генератор нечётных чисел от 1 до n (включительно), используя ключевое слово yield
# def odd_nums(n):
#     for i in range(1, n + 1, 2):
#         yield i
#
# odd_to_15 = odd_nums(15)
# print(list(odd_to_15))

#Решить задачу генерации нечётных чисел от 1 до n (включительно), не используя ключевое слово yield

# num = 9
# nums_viw = (num for num in range(1, num + 1, 2))
#
# print(list(nums_viw))

#3.	Есть два списка: Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
# ('Иван', '9А')
# ('Анастасия', '7В')
# Количество генерируемых кортежей не должно быть больше длины списка tutors. Если в списке klasses меньше элементов, чем в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ('Станислав', None)
# Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. Подумать, в каких ситуациях генератор даст эффект.

# from itertools import islice, zip_longest
#
# tutors = [
#     'Иван', 'Анастасия', 'Петр', 'Сергей',
#     'Дмитрий', 'Борис', 'Елена'
# ]
# klasses = [
#     '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
# ]
# res = zip_longest(tutors, klasses, fillvalue=None)
#
# print(*res)

#4.	Представлен список чисел. Необходимо вывести те его элементы, значения которых больше предыдущего, например:

src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
src_1 = src.copy()
#list1 = []
#result = [12, 44, 4, 10, 78, 123]

result = [src[i+1] for i in range(len(src)-1) if src[i] < src[i+1]]

# result = []
# for i in range(0, len(src)-1):
#     if src[i] < src[i+1]:
#         result.append(src_1[i+1])
#     else:
#         i += 1
#
#
# print(src_1)
print(result)